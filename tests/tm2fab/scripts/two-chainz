#!/bin/bash

set -x

# two-chainz creates two ${CHAIN_BINARY} chains and configures the relayer to 

SCRIPTDIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" >/dev/null 2>&1 && pwd )"
TM_CHAIN_DATA="$(pwd)/data"
RELAYER_DIR="$(dirname $SCRIPTDIR)"
RELAYER_CONF="$HOME/.urelayer"
RLY_BINARY=../../build/uly
RLY="${RLY_BINARY} --debug"
FIXTURES_DIR=./fixtures

# Ensure ${CHAIN_BINARY} is installed
if ! [ -x ${CHAIN_BINARY} ]; then
  echo "Error: ${CHAIN_BINARY} is not installed." >&2
  exit 1
fi

# Ensure ${RLY_BINARY} is installed
if ! [ -x ${RLY_BINARY} ]; then
  echo "Error: ${RLY_BINARY} is not installed." >&2
  exit 1
fi

# Run tendermint chain
./scripts/tm-chain
# Run fabric chain
./scripts/fab-chain

echo "Generating ${RLY_BINARY} configurations..."

${RLY} config init
${RLY} chains add-dir configs/demo/

# setup key for tendermint client
SEED0=$(jq -r '.mnemonic' $CHAIN_DATA/ibc0/key_seed.json)
echo "Key $(${RLY} tendermint keys restore ibc0 testkey "$SEED0") imported from ibc0 to relayer..."

# setup wallet for fabric client
${RLY} fabric wallet populate ibc1 --cert ${FIXTURES_DIR}/certs/org1-user-signcert.pem --key ${FIXTURES_DIR}/keys/clients/org1-user-priv_sk
# initialize the state of chaincode
${RLY} fabric chaincode init ibc1
